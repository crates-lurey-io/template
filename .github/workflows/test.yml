name: Test

on:
  push:
    branches: [ "main" ]

  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: rustfmt, clippy

    - name: Cache Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Tools
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-generate, taplo
        fallback: cargo-binstall

    - name: Generate a binary crate
      run: |
        ./cargo-generate-test.sh --bin

    - name: Generate a library crate
      run: |
        ./cargo-generate-test.sh --lib

    - name: Install Node.js
      uses: actions/setup-node@v4
    
    - name: Generate a WASM crate
      run: |
        ./cargo-generate-test.sh --lib --define wasm=true
